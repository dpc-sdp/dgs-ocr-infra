name: release

on:
  workflow_dispatch:
    inputs:
      env:
        required: true
        default: 'uat'
        type: choice
        options:
        - uat
        - production

env:
  UAT_APP_RESOURCE_GROUP_NAME: "uat-ocr"
  UAT_STORAGE_ACCOUNT_NAME: "uatocrstorageaccount"
  UAT_CONTAINER_NAME: "uatocrstoragecontainer"
  PROD_APP_RESOURCE_GROUP_NAME: "production-ocr"
  PROD_STORAGE_ACCOUNT_NAME: "prodocrstorageaccount"
  PROD_CONTAINER_NAME: "prodocrstoragecontainer"

jobs:
  get-key:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/azure-cli
    outputs:
      output-access-key-uat: ${{steps.id-uat.outputs.access-key}}
      output-access-key-prod: ${{steps.id-prod.outputs.access-key}}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: get-key-uat
        if: ${{ inputs.env == 'uat'}}
        id: id-uat
        run: |
          az login --service-principal --username ${{secrets.UAT_ARM_CLIENT_ID}} --password ${{secrets.UAT_ARM_CLIENT_SECRET}} --tenant ${{secrets.UAT_ARM_TENANT_ID}}
          az account set --subscription ${{secrets.UAT_ARM_SUBSCRIPTION_ID}}
          ACCESS_KEY=$(az storage account keys list --resource-group $UAT_APP_RESOURCE_GROUP_NAME --account-name $UAT_STORAGE_ACCOUNT_NAME --query '[0].value' -o tsv)
          echo "access-key=$ACCESS_KEY" >> $GITHUB_OUTPUT
      - name: get-key-prod
        if: ${{ inputs.env == 'production'}}
        id: id-prod
        run: |
          az login --service-principal --username ${{secrets.PROD_ARM_CLIENT_ID}} --password ${{secrets.PROD_ARM_CLIENT_SECRET}} --tenant ${{secrets.PROD_ARM_TENANT_ID}}
          az account set --subscription ${{secrets.PROD_ARM_SUBSCRIPTION_ID}}
          ACCESS_KEY=$(az storage account keys list --resource-group $PROD_APP_RESOURCE_GROUP_NAME --account-name $PROD_STORAGE_ACCOUNT_NAME --query '[0].value' -o tsv)
          echo "access-key=$ACCESS_KEY" >> $GITHUB_OUTPUT

  deploy:
    env:
      UAT_ARM_CLIENT_ID: ${{secrets.UAT_ARM_CLIENT_ID}}
      UAT_ARM_CLIENT_SECRET: ${{secrets.UAT_ARM_CLIENT_SECRET}}
      UAT_ARM_TENANT_ID: ${{secrets.UAT_ARM_TENANT_ID}}
      UAT_ARM_SUBSCRIPTION_ID: ${{secrets.UAT_ARM_SUBSCRIPTION_ID}}
      PROD_ARM_CLIENT_ID: ${{secrets.PROD_ARM_CLIENT_ID}}
      PROD_ARM_CLIENT_SECRET: ${{secrets.PROD_ARM_CLIENT_SECRET}}
      PROD_ARM_TENANT_ID: ${{secrets.PROD_ARM_TENANT_ID}}
      PROD_ARM_SUBSCRIPTION_ID: ${{secrets.PROD_ARM_SUBSCRIPTION_ID}}
    runs-on: ubuntu-latest
    container:
      image: hashicorp/terraform
    needs: get-key
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: uat
        if: ${{ inputs.env == 'uat'}}
        run: |
          cd uat
          sed -i -e 's@state_rg@'$UAT_APP_RESOURCE_GROUP_NAME'@g' main.tf
          sed -i -e 's@state_sa@'$UAT_STORAGE_ACCOUNT_NAME'@g' main.tf
          sed -i -e 's@state_cn@'$UAT_CONTAINER_NAME'@g' main.tf
          sed -i -e 's@state_ak@'${{needs.get-key.outputs.output-access-key-uat}}'@g' main.tf
          terraform init
          terraform apply -auto-approve
      - name: production
        if: ${{ inputs.env == 'production'}}
        run: |
          cd production
          sed -i -e 's@state_rg@'$PROD_APP_RESOURCE_GROUP_NAME'@g' main.tf
          sed -i -e 's@state_sa@'$PROD_STORAGE_ACCOUNT_NAME'@g' main.tf
          sed -i -e 's@state_cn@'$PROD_CONTAINER_NAME'@g' main.tf
          sed -i -e 's@state_ak@'${{needs.get-key.outputs.output-access-key-prod}}'@g' main.tf
          terraform init
          terraform apply -auto-approve